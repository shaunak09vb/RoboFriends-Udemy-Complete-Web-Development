{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","className","alt","src","this","props","id","name","email","React","Component","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","setState","App","onSearchChange","event","searchfield","target","value","fetch","then","Response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAgBeA,E,4JAbX,WACI,OACG,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BC,KAAKC,MAAMC,GAArC,aACrB,gCACI,6BAAKF,KAAKC,MAAME,OAChB,4BAAIH,KAAKC,MAAMG,kB,GAPfC,IAAMC,WCoBVC,EAnBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIT,GAAIM,EAAOG,GAAGT,GACdC,KAAMK,EAAOG,GAAGR,KAChBC,MAAOI,EAAOG,GAAGP,OAHZO,SCAlBC,EARG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAChB,OACQ,qBAAKhB,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCiB,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCKzGI,EARA,SAAChB,GACZ,OACI,qBAAKiB,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKpB,EAAMqB,YCgBJC,E,kDAlBX,WAAYtB,GAAO,IAAD,8BACd,cAAMA,IACDuB,MAAM,CACPC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAMC,GACpB3B,KAAK4B,SAAS,CAACH,UAAU,M,oBAE7B,WACI,OAAGzB,KAAKwB,MAAMC,SACH,6DAEJzB,KAAKC,MAAMqB,a,GAfChB,aCoDZuB,G,wDA9CX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKH,SAAS,CAACI,YAAaD,EAAME,OAAOC,SAfzC,EAAKV,MAAM,CACPhB,OAAQ,GACRwB,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OAEfG,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKX,SAAS,CAACpB,OAAQ+B,S,oBAM/B,WAAS,IAAD,EACuBvC,KAAKwB,MAAzBhB,EADH,EACGA,OAAOwB,EADV,EACUA,YACRQ,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASZ,EAAYW,kBAGzD,OAAKnC,EAAOqC,OAKJ,sBAAKhD,UAAU,KAAf,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWgB,aAAcb,KAAK8B,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtB,OAAQgC,WAT3B,gD,GA3BDnC,IAAMC,YCKTwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAK/CX,M","file":"static/js/main.25775e47.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass Card extends React.Component{\r\n    render(){\r\n        return(\r\n           <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n               <img alt=\"robots\" src={`https://robohash.org/${this.props.id}200x200`}/>\r\n               <div>\r\n                   <h2>{this.props.name}</h2>\r\n                   <p>{this.props.email}</p>\r\n               </div>\r\n           </div> \r\n        );\r\n    }\r\n} \r\n\r\nexport default Card;","import React from \"react\"\r\nimport Card from \"./Card.js\"\r\n\r\nconst CardList = ({robots})=>{\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                        <Card \r\n                            key={i} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n               })\r\n            }            \r\n        </div>\r\n    );\r\n} \r\n\r\nexport default CardList;","import React from \"react\"\r\n\r\nconst SearchBox = ({searchChange})=>{\r\n    return(\r\n            <div className=\"pa2\">\r\n                <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"Search Robots\" onChange={searchChange}/>\r\n            </div>\r\n       );\r\n    }\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'1px solid black', height:'600px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info)  {\r\n        this.setState({hasError: true})\r\n    }  \r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oooopss.That is not good :(</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React from \"react\"\r\nimport CardList from \"../components/CardList.js\"\r\nimport SearchBox from \"../components/SearchBox.js\"\r\nimport Scroll from \"../components/Scroll.js\"\r\nimport ErrorBoundry from \"../components/ErrorBoundry.js\"\r\nimport \"./App.css\"\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        //console.log(\"Check\");\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(Response=> {\r\n            return Response.json();\r\n        }).then(users => {\r\n            this.setState({robots: users})\r\n        });        \r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})        \r\n    }\r\n    render(){\r\n        const {robots,searchfield}=this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        //console.log(filteredRobots);\r\n        if (!robots.length){\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else {\r\n            return(\r\n                <div className=\"tc\">\r\n                    <h1 className = \"f1\">RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n} \r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}